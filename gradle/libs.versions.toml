[versions]
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activity = "1.10.1"
androidx-lifecycle = "2.9.1"
composeMultiplatform = "1.8.2"
kotlin = "2.2.0"

navigation = "2.6.0"
auth = "2.3.1"   # for kmpauth-google / firebase
notifier = "1.5.1"   # for kmpnotifier
firebase = "2.1.0"   # GitLive Firebase BOM version
koin = "4.1.0"
serialization = "1.9.0"   # kotlinx-serialization
coil3 = "3.0.0-alpha12"
ktor = "3.2.1"
coroutines = "1.10.2"
messagebar = "1.0.8"
browser = "1.0.4"
settings = "1.3.0"
google = "4.4.3"
splash = "1.0.1"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
splash-screen = {module = "androidx.core:core-splashscreen" , version.ref = "splash"}
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# Jetpack Navigation for Compose
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation" }

# KMP Auth & Notifier
kmpauth-google = { module = "io.github.mirzemehdi:kmpauth-google", version.ref = "auth" }
kmpauth-firebase = { module = "io.github.mirzemehdi:kmpauth-firebase", version.ref = "auth" }
kmpnotifier = { module = "io.github.mirzemehdi:kmpnotifier", version.ref = "notifier" }

# GitLive Firebase
firebase-app = { module = "dev.gitlive:firebase-app", version.ref = "firebase" }
firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebase" }
firebase-storage = { module = "dev.gitlive:firebase-storage", version.ref = "firebase" }
firebase-common = { module = "dev.gitlive:firebase-common", version.ref = "firebase" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

# Kotlinx Serialization (JSON)
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# Coil 3 (multiplatform)
coil3 = { module = "io.coil-kt:coil", version.ref = "coil3" }
coil3-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil3" }
coil3-compose-core = { module = "io.coil-kt:coil-compose-core", version.ref = "coil3" }
coil3-network-ktor3 = { module = "io.coil-kt:coil-network-ktor3", version.ref = "coil3" }

# Ktor HTTP client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }

# Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# Misc KMP libraries
messagebar-kmp = { module = "com.stevdza-san:messagebarkmp", version.ref = "messagebar" }
browser-kmp = { module = "com.stevdza-san:browser-kmp", version.ref = "browser" }

# Multiplatform Settings (save keys and pair values)
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }
multiplatform-settings-make-observable = { module = "com.russhwolf:multiplatform-settings-make-observable", version.ref = "settings" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization     = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
google-services   = { id = "com.google.gms.google-services",    version.ref = "google" }